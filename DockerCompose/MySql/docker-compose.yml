services:
  mysql:
    image: mysql:lts
    container_name: mysql
    environment:
      MYSQL_ROOT_PASSWORD: rootpassword
      MYSQL_DATABASE: metabase
      MYSQL_USER: user
      MYSQL_PASSWORD: userpassword
    ports:
      - "3306:3306"
    networks:
      - metabase-network
    healthcheck:
      test: ["CMD-SHELL", "mysqladmin ping -h localhost -u root --password=rootpassword || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 60s
    restart: always
    volumes:
      - mysql-data:/var/lib/mysql  # Persist MySQL data
      - ./mysql-init:/docker-entrypoint-initdb.d  # Mount the init.sql script

  metabase:
    image: metabase/metabase:latest
    container_name: metabase
    ports:
      - "3000:3000"
    depends_on:
      mysql:
        condition: service_healthy
    networks:
      - metabase-network
    environment:
      MB_DB_TYPE: mysql
      MB_DB_DBNAME: metabase
      MB_DB_PORT: 3306
      MB_DB_USER: user
      MB_DB_PASS: userpassword
      MB_DB_HOST: mysql
      MB_DB_CONNECTION_URI: "mysql://user:userpassword@mysql:3306/metabase?useSSL=false&allowPublicKeyRetrieval=true"
    volumes:
      - metabase-data:/metabase-data  # Persist Metabase state
    restart: always
    entrypoint: >
      sh -c "
      apk add --no-cache wget &&
      wget https://github.com/jwilder/dockerize/releases/download/v0.6.1/dockerize-linux-amd64-v0.6.1.tar.gz &&
      tar -C /usr/local/bin -xzvf dockerize-linux-amd64-v0.6.1.tar.gz &&
      dockerize -wait tcp://mysql:3306 -timeout 60s &&
      exec java -jar /app/metabase.jar"

networks:
  metabase-network:
    driver: bridge

volumes:
  mysql-data:
  metabase-data:
